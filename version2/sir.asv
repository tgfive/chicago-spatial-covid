function dydt = sir(t,y,p,t_q)
% SIR   SIR model function.

    % Derivatives with respect to time
    s = y(1);
    e = y(2);
    a = y(3);
    i = y(5);
    h = y(6);
    
    % System parameters
    % Optimized parameters (p vector)
     = p(1);
    alpha_i = p(2);
    m_ar = p(3);
    m = p(4);
    gamma = p(5);
    omega = p(6);
    chi = p(7);
    psi = p(8);
    alpha_sa = p(9);
    beta_si = p(10);
    eta_a = p(11);
    eta_i = p(12);
    
    
    % Calculate time dependent betas
    alpha_i_t = betafun([alpha_i,eta_i],t_q,t);
    alpha_a_t = betafun([alpha_a,eta_a],t_q,t);

    % Define system
    dydt = [
        -alpha_a_t .* (s * a) - alpha_i_t .* (s * i); % s_t
        alpha_a_t .* (s * a) + alpha_i_t .* (s * i) - (lambda_a + lambda_i) * e; % e_t
        lambda_a * e - xi * a; % a_t
        xi * a; % ar_t
        lambda_i * e - i; % i_t
        gamma * i - (1 - omega) * theta * h - omega * kappa * h; % h_t
        (1 - gamma) * i + (1 - omega) * theta * h % r_t
        ];
end